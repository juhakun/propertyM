package com.juliahaeusler.uebung12;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JPanel;

public class JBallonPanel extends JPanel implements Runnable {

    Random xPosition;
    Random yPosition;
    double x;
    double y;
    private Image ballon;
    private Image kaboom;
    private Image img;
    int countClicks;
    int countHits = 0;
    int countBallons;
    int countKaboom = 0;
    String noOfKabooms;
//    String noOfClicks;
    String noOfBallons;
    int speed;
    private Clip audioClip;
//    private String music = "far4.wav";
    
    
    public JBallonPanel() {
    	addMouseListener(new MouseAdapter() {
    		@Override
    		public void mousePressed(MouseEvent e) {
//    		    countClicks++;
//    		    noOfClicks = String.valueOf(countClicks);
    		    int xMaus = e.getX();
    		    int yMaus = e.getY();
    		    if (xMaus >= x && xMaus <= x + (img.getWidth(null) / 5) && yMaus >= y && yMaus <= y + (img.getHeight(null) / 5)) {
    			    countHits++;
    			    setImg(kaboom);
    			    repaint();
    			    countKaboom++;
    			    noOfKabooms = String.valueOf(countKaboom);
    			try {
    			File soundfile = new File("/Users/julia/Desktop/Julia/Weiterbildung/Module/Programme/JavaUebung12/bin/com/juliahaeusler/uebung12/BallonPlatzen.wav");
    			audioClip = AudioSystem.getClip(); 
    			audioClip.open(AudioSystem.getAudioInputStream(soundfile));
    			audioClip.start();
    		    } catch (LineUnavailableException e1) {
    			// TODO Auto-generated catch block
    			e1.printStackTrace();
    		    } catch (UnsupportedAudioFileException e1) {
    			// TODO Auto-generated catch block
    			e1.printStackTrace();
    		    } catch (IOException e1) {
    			// TODO Auto-generated catch block
    			e1.printStackTrace();
    		    }
    			    
    			} 
    		    } 
    		
    	});
	setBackground(new Color(240, 248, 255));
	try {
	    ballon = ImageIO.read(this.getClass().getResource("Ballon2.png"));
	    kaboom = ImageIO.read(this.getClass().getResource("Kaboom.png"));
	    ImageIO.read(this.getClass().getResource("Wolke.png"));
	} catch (IOException e) {
	    // TODO Auto-generated catch block
	    e.printStackTrace();
	}

    }

    @Override
    public void run() {

	    xPosition = new Random();
	    yPosition = new Random();
	    while (true) {

		synchronized (this) {
		    setImg(ballon);
		    x = xPosition.nextDouble() * (getWidth() - img.getWidth(this) / 5);
		    countBallons++;
		    noOfBallons = String.valueOf(countBallons);
		    y = yPosition.nextDouble() * (getHeight() - img.getHeight(this) / 5);
		    }	
		repaint();

		try {
			Thread.sleep(speed);
		    } catch (InterruptedException e) {
			break;
		    }
		}
   
	   


    }
	  
    
    public synchronized void paintComponent(Graphics g) {
	try {
	    super.paintComponent(g);
	    g.drawImage(getImg(), (int) x, (int) y, getImg().getWidth(null) / 5, getImg().getHeight(null) / 5, this);
	} catch (Exception e) {
	    // TODO Auto-generated catch block
	    e.printStackTrace();
	}


    }

    public Image getImg() {
        return img;
    }

    public void setImg(Image img) {
        this.img = img;
    }
    
    
    

}
