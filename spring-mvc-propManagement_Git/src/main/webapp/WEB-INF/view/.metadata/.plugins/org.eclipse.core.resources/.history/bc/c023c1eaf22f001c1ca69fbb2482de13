package com.juliahaeusler.uebung13;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import net.miginfocom.swing.MigLayout;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Stundenplan extends JFrame {

    private JPanel contentPane;
    private JTable tableStundenplan;
    private DefaultTableModel stundenplanModel;
    private String dateiname = "." + File.separator + " stundenplan.dat";

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
	EventQueue.invokeLater(new Runnable() {
	    public void run() {
		try {
		    Stundenplan frame = new Stundenplan();
		    frame.setVisible(true);
		} catch (Exception e) {
		    e.printStackTrace();
		}
	    }
	});
    }

    /**
     * Create the frame.
     */
    public Stundenplan() {
    	addWindowListener(new WindowAdapter() {
    		@Override
    		public void windowClosing(WindowEvent e) {
    		    try (var out = new BufferedWriter(new FileWriter(dateiname))) {
    			for (var i = 0; i < tableStundenplan.getModel().getRowCount(); i ++) {
    			    for (var j = 0; j < tableStundenplan.getModel().getColumnCount(); j++) {
    				if (tableStundenplan.getModel().getValueAt(i, j) != null) {
    				    out.write(tableStundenplan.getModel().getValueAt(i, j).toString());
    				} else {
    				    out.write("");
    				}
    				out.newLine();
    			    }
    			}
    		    } catch (IOException e1) {
			e1.printStackTrace();
		    }
    		}
    	});
	setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	setBounds(100, 100, 450, 300);
	contentPane = new JPanel();
	contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
	setContentPane(contentPane);
	contentPane.setLayout(new MigLayout("", "[grow][]", "[grow][]"));
	
	JScrollPane scrollPane = new JScrollPane();
	contentPane.add(scrollPane, "cell 0 0,grow");
	
	tableStundenplan = new JTable();
	scrollPane.setViewportView(tableStundenplan);
	tableStundenplan.setModel(new DefaultTableModel(
		new String[][] {
		    {"1"}, 
		    {"2"}, 
		    {"3"}, 
		    {"4"}, 
		    {"5"}, 
		    {"6"}, 
		    {"7"}, 
		    {"8"}, 
		    {"9"}, 
		    {"10"}
		    }, 
			new String[] {
				"Stunde", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag"
				}
		    ));
	
	var datei = new File(dateiname);
	if (!datei.exists()) {
		try {
		    datei.createNewFile();
		} catch (IOException e1) {
		    e1.printStackTrace();
		}
	} else {
	    try (var in = new BufferedReader(new FileReader(dateiname))) {
		for (var i = 0; i <tableStundenplan.getModel().getRowCount(); i++) {
		    for ( var j = 0; j < tableStundenplan.getModel().getColumnCount(); j++) {
			var eintrag = in.readLine();
			tableStundenplan.getModel().setValueAt(eintrag,  i,  j);
		    }
		}
	    
	    } catch (FileNotFoundException e1) {
		e1.printStackTrace();
	    } catch (IOException e1) {
		e1.printStackTrace();
	    }
	}
    }

}
